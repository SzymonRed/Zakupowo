@using Zakupowo.Models
@model IEnumerable<Zakupowo.Models.Product>

@{
    ViewBag.Title = "Produkty - Zakupowo";
    var discount = Session["UserDiscount"] != null ? (decimal)Session["UserDiscount"] : 0;
    int currentPage = ViewBag.CurrentPage ?? 1;
    int totalPages = ViewBag.TotalPages ?? 1;
    int pageSize = ViewBag.PageSize ?? 10;
}

<h2 class="product-list-header">Lista produktów</h2>

@if (TempData["CartSuccess"] != null)
{
    <div class="alert alert-success">
        @TempData["CartSuccess"]
    </div>
}

<form action="@Url.Action("Search", "Product")" method="get" class="search-form">
    <input type="text" name="keyword" value="@ViewBag.Keyword" placeholder="Wyszukaj produkty..." class="form-control" />
    <button type="submit" class="btn btn-primary">Szukaj</button>
</form>

<div class="product-list-container">
    @foreach (var product in Model)
    {
        <div class="product-item @(product.Stock == 0 ? "out-of-stock" : "")">
            @if (product.Image != null)
            {
                <img src="@Url.Content(product.Image)" alt="@product.Name" class="product-image"/>
            }

            <h3 class="product-name">@product.Name</h3>
            <p class="product-description">@product.Description</p>
            <p class="product-price">
                Cena netto: @((product.PriceAfterConversion / (discount + 1)).ToString("N2")) @ViewBag.CurrencyCode<br />
                VAT: @(product.VatRate.Rate.HasValue
                ? (product.VatRate.Rate.Value > 0 ? (product.VatRate.Rate.Value * 100).ToString("F2") + "%" : "0%")
                : "Zwolniony z VAT")<br />
                @if (product.VatRate.Rate.HasValue && product.VatRate.Rate.Value > 0)
                {
                <span>Cena brutto: @((product.PriceAfterConversion * (1 + product.VatRate.Rate.Value) / (discount + 1)).ToString("N2")) @ViewBag.CurrencyCode</span>
                <br />
                }
            </p>

            @if (product.Stock > 0)
            {
                <form action="@Url.Action("AddToCart", "Cart")" method="post" class="add-to-cart-form">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="productId" value="@product.ProductId"/>
                    <input type="number" name="quantity" value="1" min="1" class="quantity-input"/>
                    <button type="submit" class="btn add-to-cart-button">Dodaj do koszyka</button>
                </form>
            }
            else
            {
                <div class="out-of-stock-message">Produkt niedostępny w magazynie</div>
            }
        </div>
    }
</div>

<div class="pagination-container">
    <form method="get" action="@Url.Action("ProductList", "Product")" class="page-size-form">
        <label for="pageSize">Produkty na stronę:</label>
        <select id="pageSize" name="pageSize" class="form-select" onchange="this.form.submit()">
            <option value="10" @(pageSize == 10 ? "selected" : "")>10</option>
            <option value="20" @(pageSize == 20 ? "selected" : "")>20</option>
        </select>
        <input type="hidden" name="page" value="1"/>
    </form>

    <div class="pagination-buttons">
        @if (currentPage > 1)
        {
        <a href="@Url.Action("Search", "Product", new { keyword = ViewBag.Keyword, page = currentPage - 1, pageSize })"
           class="btn btn-secondary">Poprzednia</a>
        }

        @for (int i = 1; i <= totalPages; i++)
        {
        <a href="@Url.Action("Search", "Product", new { keyword = ViewBag.Keyword, page = i, pageSize })"
           class="btn @(i == currentPage ? "btn-primary" : "btn-secondary")">
            @i
        </a>
        }

        @if (currentPage < totalPages)
        {
        <a href="@Url.Action("Search", "Product", new { keyword = ViewBag.Keyword, page = currentPage + 1, pageSize })"
           class="btn btn-secondary">Następna</a>
        }
    </div>

</div>
